# Generated by Django 5.2.1 on 2025-09-01 06:18

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('currencies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('organization_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('archived', 'Archived'), ('closed', 'Closed')], default='active', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
                'ordering': ['-created_at'],
                'permissions': (('manage_organization', 'Can manage organization by higher level roles (Org Owner, WA, OR, TC)'), ('add_workspace', 'Can add workspace to organization by Org Owner'), ('add_team', 'Can add team to organization by Org Owner'), ('invite_org_member', 'Can invite org member to organization by Org Owner'), ('add_org_entry', 'Can add org entry to organization by Org Owner'), ('view_org_entry', 'Can view org entry to organization by Org Owner'), ('change_org_entry', 'Can change org entry to organization by Org Owner'), ('delete_org_entry', 'Can delete org entry to organization by Org Owner'), ('edit_workspace_admin', 'Can edit workspace admin by Org Owner'), ('change_team_coordinator', 'Can change team coordinator by Org Owner'), ('add_org_currency', 'Can add org currency to organization only by Org Owner'), ('change_org_currency', 'Can change org currency to organization only by Org Owner'), ('delete_org_currency', 'Can delete org currency to organization only by Org Owner'), ('view_report_page', 'Can view report page by Org Owner'), ('remove_org_member', 'Can remove org member from organization only by Org Owner'), ('confirm_remittance_payment', 'Can confirm remittance payment only by Org Owner')),
            },
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('organization_member_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='organizations.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'organization member',
                'verbose_name_plural': 'organization members',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationExchangeRate',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('note', models.TextField(blank=True, null=True)),
                ('organization_exchange_rate_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='currencies.currency')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_exchange_rates', to='organizations.organization')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_added_%(class)s_set', to='organizations.organizationmember')),
            ],
            options={
                'verbose_name': 'Organization Exchange Rate',
                'verbose_name_plural': 'Organization Exchange Rates',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='owner',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='organizations.organizationmember'),
        ),
        migrations.AddConstraint(
            model_name='organizationmember',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('organization', 'user'), name='unique_organization_member'),
        ),
        migrations.AddConstraint(
            model_name='organizationexchangerate',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('organization', 'currency', 'effective_date'), name='unique_organization_exchange_rate'),
        ),
        migrations.AddIndex(
            model_name='organization',
            index=models.Index(fields=['title'], name='organizatio_title_fd51d9_idx'),
        ),
        migrations.AddConstraint(
            model_name='organization',
            constraint=models.UniqueConstraint(fields=('owner', 'title'), name='unique_organization'),
        ),
    ]
